# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Detail {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  key: String!
  value: String!
  product: Product!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Image {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  url: String!
  altText: String!
  position: Float!
  product: Product!
}

type Specification {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  size: String!
  ageGroup: String!
  material: String!
  packageSize: String!
  product: Product!
}

type Product {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  slug: String!
  sku: String!
  colors: [String!]!
  shortDescription: String!
  fullDescription: String!
  price: Float!
  discount: Float!
  stock: Float!
  totalSold: Float!
  images: [Image!]!
  details: [Detail!]!
  specification: Specification!
  categories: [Category!]!
  formattedPrice: String!
  formattedOldPrice: String
}

type Category {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  slug: String!
  products: [Product!]!
}

type StatusResponseDto {
  statusCode: Float!
  message: String!
}

type ProductMetadataInput {
  name: String!
  shortDescription: String!
  images: [Image!]!
  categories: [Category!]!
}

type ProductStaticParamInput {
  slug: String!
  id: String!
}

type ProductsWithCountInput {
  items: [Product!]!
  total: Int!
}

type Query {
  products(options: PaginationOptionsInput!): ProductsWithCountInput!
  bestsellers(take: Float!): [Product!]!
  newest(take: Float!): [Product!]!
  otherProducts(id: String!, take: Float!): [Product!]!
  productStaticParams: [ProductStaticParamInput!]!
  product(id: String!): Product!
  productBySku(sku: String!): Product!
  productMetadata(id: String!): ProductMetadataInput!
  categories: [Category!]!
  category(id: String!): Category!
}

input PaginationOptionsInput {
  take: Float!
  skip: Float!
  sort: String!
  categoryIds: [ID!]!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(id: String!, updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: String!): StatusResponseDto!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category!
}

input CreateProductInput {
  name: String!
  slug: String
  colors: [String!]!
  shortDescription: String!
  fullDescription: String!
  price: Float!
  discount: Float
  stock: Float
  totalSold: Float
  images: [CreateImageInput!]!
  details: [CreateDetailInput!]!
  specification: CreateSpecificationInput!
  categoryIds: [String!]!
}

input CreateImageInput {
  url: String!
  altText: String!
  position: Float!
}

input CreateDetailInput {
  key: String!
  value: String!
}

input CreateSpecificationInput {
  size: String!
  ageGroup: String!
  material: String!
  packageSize: String!
}

input UpdateProductInput {
  name: String
  slug: String
  colors: [String!]
  shortDescription: String
  fullDescription: String
  price: Float
  discount: Float
  stock: Float
  totalSold: Float
  images: [CreateImageInput!]
  details: [CreateDetailInput!]
  specification: CreateSpecificationInput
  categoryIds: [String!]
}

input CreateCategoryInput {
  name: String!
  slug: String
}

input UpdateCategoryInput {
  name: String
  slug: String
}